---

# On a fresh osx install the type of idletime is string, if activated it gets changed to int

- name: Screensaver - Read idleTime type.
  command: defaults -currentHost read-type com.apple.screensaver idleTime
  register: idletime_type
  changed_when: false
  failed_when: false

- name: Screensaver - Change idleTime type to int.
  command: defaults -currentHost write com.apple.screensaver idleTime -int "{{ system.screensaver.activation_delay }}"
  when: idletime_type.stdout.find('string') != -1
  no_log: true

- name: Screensaver - Set activation delay for screensaver ({{ system.screensaver.activation_delay }}).
  osx_defaults:
    domain: com.apple.screensaver
    host: currentHost
    key: idleTime
    type: int
    value: "{{ system.screensaver.activation_delay | int }}"

- name: Screensaver - Ask for a password when leaving the screensaver ({{ system.screensaver.ask_password }}).
  osx_defaults:
    domain: com.apple.screensaver
    key: askForPassword
    type: int
    value: "{{ system.screensaver.ask_password | int }}"

- name: Screensaver - Set ask password delay ({{ system.screensaver.ask_password_delay }}).
  osx_defaults:
    domain: com.apple.screensaver
    key: askForPasswordDelay
    type: float
    value: "{{ system.screensaver.ask_password_delay | float }}"

- name: Screensaver - Get active screensaver.
  shell: defaults -currentHost read com.apple.screensaver
  register: active_screensaver_result
  check_mode: no
  changed_when: false

- name: Screensaver - Set screensaver ({{ system.screensaver.screensaver.name }}).
  shell: defaults -currentHost write com.apple.screensaver moduleDict -dict \
          moduleName -string "{{ system.screensaver.screensaver.name }})" \
          displayName -string "{{ system.screensaver.screensaver.name }}" \
          path -string "{{ system.screensaver.screensaver.path }}" \
          type -int 0
  when: active_screensaver_result.stdout.find(system.screensaver.screensaver.name) == -1
